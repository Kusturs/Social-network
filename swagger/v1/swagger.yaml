---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/posts/{post_id}/comments":
    parameters:
    - name: post_id
      in: path
      description: ID поста
      required: true
      schema:
        type: integer
    get:
      summary: Получить список комментариев
      tags:
      - Комментарии
      parameters:
      - name: parent_id
        in: query
        required: false
        description: ID родительского комментария
        schema:
          type: integer
      - name: page
        in: query
        required: false
        description: Номер страницы
        schema:
          type: integer
      - name: items
        in: query
        required: false
        description: Количество элементов на странице
        schema:
          type: integer
      responses:
        '200':
          description: список комментариев получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      "$ref": "#/components/schemas/comment"
                  pagination:
                    "$ref": "#/components/schemas/pagination"
    post:
      summary: Создать новый комментарий
      tags:
      - Комментарии
      parameters: []
      responses:
        '201':
          description: комментарий создан
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comment"
        '422':
          description: неверные параметры
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                parent_id:
                  type: integer
                  nullable: true
              required:
              - content
  "/comments/{id}":
    parameters:
    - name: id
      in: path
      description: ID комментария
      required: true
      schema:
        type: integer
    get:
      summary: Получить комментарий
      tags:
      - Комментарии
      responses:
        '200':
          description: комментарий найден
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comment"
        '404':
          description: комментарий не найден
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
    patch:
      summary: Обновить комментарий
      tags:
      - Комментарии
      parameters: []
      responses:
        '200':
          description: комментарий обновлен
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comment"
        '422':
          description: неверные параметры
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
              - content
    delete:
      summary: Удалить комментарий
      tags:
      - Комментарии
      responses:
        '204':
          description: комментарий удален
        '409':
          description: конфликт при удалении
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
  "/posts":
    get:
      summary: returns all posts
      tags:
      - Posts
      responses:
        '200':
          description: posts found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    content:
                      type: string
                    author:
                      type: object
                      properties:
                        id:
                          type: integer
                        username:
                          type: string
                        first_name:
                          type: string
                        second_name:
                          type: string
                        last_name:
                          type: string
        '401':
          description: unauthorized
components:
  schemas:
    comment:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        author:
          "$ref": "#/components/schemas/user"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        parent_id:
          type: integer
          nullable: true
      required:
      - id
      - content
      - author
      - created_at
      - updated_at
    user:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
      required:
      - id
      - username
    pagination:
      type: object
      properties:
        count:
          type: integer
        page:
          type: integer
        items:
          type: integer
        pages:
          type: integer
      required:
      - count
      - page
      - items
      - pages
    error:
      type: object
      properties:
        error:
          type: string
      required:
      - error
    errors:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
      - errors
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
